apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "okapi.fullname" . }}
  labels:
    {{- include "okapi.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "okapi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "okapi.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "okapi.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - dev
          env:
            - name: OKAPI_HOST
              valueFrom:
                secretKeyRef:
                  name: db-connect-modules
                  key: DB_HOST
            - name: OKAPI_DB
              valueFrom:
                secretKeyRef:
                  name: db-connect-modules
                  key: DB_DATABASE
            - name: OKAPI_DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-connect-modules
                  key: DB_USERNAME
            - name: OKAPI_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-connect-modules
                  key: DB_PASSWORD
            - name: JAVA_OPTIONS
              value: "-Djava.awt.headless=true -Dstorage=postgres -Dpostgres_host=$(OKAPI_HOST) -Dpostgres_port=5432 -Dpostgres_username=$(OKAPI_DB_USER) -Dpostgres_password=$(OKAPI_DB_PASSWORD) -Dpostgres_database=$(OKAPI_DB) -Dlog4j.configurationFile=/etc/log4j2.xml -Dhost=okapi -Dokapiurl=http://okapi:9130"
          ports:
            - name: http
              containerPort: 9130
              protocol: TCP
          volumeMounts:
          - name: "log4j2-xml"
            readOnly: true
            mountPath: "/etc/log4j2.xml"
            subPath: "log4j2.xml"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: "log4j2-xml"
        configMap:
          name: okapi-log4j2-configmap
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
